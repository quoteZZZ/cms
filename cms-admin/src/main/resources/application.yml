cms:
  name: "竞赛管理系统"                  # 系统名称
  version: "1.0.0"                     # 系统版本
  copyrightYear: 2025                  # 版权年份
  profile: "D:/cms/uploadPath"         # 文件上传路径；示例：Windows - D:/cms/uploadPath，Linux - /home/cms/uploadPath
  addressEnabled: false                # 是否启用获取IP地址功能
  captchaType: "math"                  # 验证码类型（math：数学计算，char：字符验证）

server:
  port: 8080                   # HTTP服务器端口
  address: 127.0.0.1                 # 禁用 DNS 监听
  servlet:
    context-path: "/"                # 应用访问的上下文路径
  tomcat:
    uri-encoding: "UTF-8"             # Tomcat URI编码
    accept-count: 1000               # 连接数满时等待队列长度
    threads:
      max: 800                     # Tomcat最大线程数
      min-spare: 100               # Tomcat启动时预初始化的线程数

logging:
  level:
    com.cms: "info"                # 生产环境建议设置为 info，避免过多 debug 日志影响性能和磁盘空间
    org.springframework: "warn"     # 保持较高日志级别，仅输出警告及以上级别信息

user:
  password:
    maxRetryCount: 5               # 密码最大错误重试次数
    lockTime: 10                   # 密码锁定时间（单位：分钟）

spring:
  messages:
    basename: "i18n/messages"      # 国际化资源文件基本路径
  profiles:
    active: "druid"                # 当前激活的环境配置，如：druid
  servlet:
    multipart:
      enabled: true                # 启用文件上传支持
      max-file-size: "20MB"        # 单个文件最大大小
      max-request-size: "20MB"     # 总请求大小限制
  devtools:
    restart:
      enabled: true                # 开启热部署功能，方便开发调试
  redis:
    host: "192.168.6.111"           # Redis服务器地址
    port: 6379                    # Redis服务器端口
    database: 6                  # 使用的Redis数据库索引（非默认0，避免与其他项目冲突）
    password: "365061"            # Redis访问密码
    timeout: "10s"               # Redis连接超时时间
    lettuce:
      pool:
        min-idle: 0               # 连接池中最小空闲连接数
        max-idle: 8               # 连接池中最大空闲连接数
        max-active: 8             # 连接池中最大活跃连接数
        max-wait: "500ms"         # 设置连接池最大阻塞等待时间为500毫秒，避免无限等待

  rabbitmq:
    host: "192.168.6.112"          # RabbitMQ服务器地址
    port: 5672                     # RabbitMQ服务器端口（用于消息传递，非管理端口15672）
    username: "guest"              # RabbitMQ用户名（生产环境建议使用非默认账户）
    password: "guest"              # RabbitMQ密码
    virtual-host: "/"              # 虚拟主机，用于逻辑隔离
    connection-timeout: "10000ms"  # 连接超时时间：10秒
    requested-heartbeat: 30        # 心跳间隔：30秒，降低因网络抖动的重连风险
    publisher-confirm-type: correlated   # 启用发布确认（correlated 模式），确保每条消息得到确认
    publisher-returns: true        # 启用发布返回机制，确保消息无法路由时返回给生产者
    template:
      mandatory: true              # 强制返回模式，消息无法路由时触发回调
      retry:
        initial-interval: "1000ms" # 初始重试间隔：1秒
        max-interval: "10000ms"    # 最大重试间隔：10秒
        multiplier: 2.0            # 重试间隔翻倍策略
    listener:
      simple:
        retry:
          enabled: true            # 启用消费者重试机制
          initial-interval: "1000ms" # 消费重试初始间隔：1秒
          max-attempts: 3            # 消费重试最大次数：3次
          multiplier: 2.0            # 消费重试间隔翻倍策略

token:
  header: "Authorization"          # 请求头中Token的名称
  secret: "abcdefghijklmnopqrstuvwxyz"  # Token加密密钥
  expireTime: 30                   # Token有效期（单位：分钟）

# MyBatis配置
mybatis:
  # 搜索指定包别名
  typeAliasesPackage: com.cms.**.domain
  # 配置mapper的扫描，找到所有的mapper.xml映射文件
  mapperLocations: classpath*:mapper/**/*Mapper.xml
  # 加载全局的配置文件
  configLocation: classpath:mybatis/mybatis-config.xml

pagehelper:
  helperDialect: "mysql"           # 分页插件使用的数据库方言
  supportMethodsArguments: true    # 支持通过方法参数传递分页参数
  params: "count=countSql"         # 分页查询中计数SQL的参数配置

swagger:
  enabled: true                   # 是否启用Swagger接口文档
  pathMapping: "/dev-api"           # Swagger接口文档请求前缀

xss:
  enabled: true                   # 是否启用XSS防护
  excludes: "/system/notice"        # 排除不需要过滤的URL（多个链接用逗号分隔）
  urlPatterns: "/system/*,/monitor/*,/tool/*"  # 需要进行XSS过滤的URL模式
